﻿@using Microsoft.AspNetCore.Identity
@using TechHaven.Areas.Identity.Data
@inject SignInManager<TechHavenUser> SignInManager
@inject UserManager<TechHavenUser> UserManager
@model IEnumerable<TechHaven.Models.Employee>

@{
    ViewData["Title"] = "Employees";
}

<h1>Employees</h1>

<p>
    <a class="btn btn-success" asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.EmployeeName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EmployeeRole)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LoginCredentials)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.EmployeeName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EmployeeRole)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LoginCredentials)
            </td>
           
                    @if (SignInManager.IsSignedIn(User))
                    {
                        <td>
                        <a class="btn btn-info" asp-action="Edit" asp-route-id="@item.EmployeeID">Edit</a>
                        <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.EmployeeID">Delete</a>
                        <a class="btn btn-warning" asp-action="Details" asp-route-id="@item.EmployeeID">Details</a>
                        </td>
                    }
                    
            
        </tr>
}
    </tbody>
</table>
