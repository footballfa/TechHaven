@using TechHaven.Areas.Identity.Data
@model PaginatedList<TechHaven.Models.OrderDetail>
﻿@using TechHaven.Models
@using Microsoft.AspNetCore.Identity

@{
    ViewData["Title"] = "Order Details";
}

<h1>Order Detail</h1>

<p>
    <a class="btn btn-success" asp-action="Create">Create New</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            <label>Find by Name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" /></label>
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["ProductNameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Product Name</a>
            </th>
            <th>
                Quantity
            </th>
            <th>
                Price
            </th>
            <th>
                Order
            </th>
            <th>
                Products
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProductName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantaty)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Order.ProductName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Products.ProductName)
            </td>
            <td>
                   
                    
                    <a class="btn btn-info" asp-action="Edit" asp-route-id="@item.Order DetailsID">Edit</a>
                    <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.Order DetailsID">Delete</a>
                    <a class="btn btn-warning" asp-action="Details" asp-route-id="@item.Order DetailsID">Details</a>
            </td>
        </tr>
}
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<div class="pagination-container text-center mt-4">
    <a class="page-link btn btn-default @prevDisabled d-inline-flex"
       asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]">
        Previous
    </a>

    <span class="page-link mx-2 d-inline-flex">
        Page @Model.PageIndex of @Model.TotalPages
    </span>

    <a class="page-link btn btn-default @nextDisabled d-inline-flex"
       asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]">
        Next
    </a>
</div>