@using TechHaven.Areas.Identity.Data
@model PaginatedList<TechHaven.Models.Customer>
﻿@using TechHaven.Models
@using Microsoft.AspNetCore.Identity

@{
  
    ViewData["Title"] = "Customer List";
}

<h1>Customer list</h1>

<p>
    <a class="btn btn-success" asp-action="Create">Create New</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            <label>Find by Name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" /></label>
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>


<table class="table" style="width:100%; font-size:1rem;">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["FirstNameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">First Name</a>
            <th>
            <th>
                Last Name
            </th>
            <th>
                Email
            </th>
            <th>
                Phone Number
            </th>
            <th>
                Address
            </th>
            <th 
                style="width:20%;"></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td style="width:0%;">@Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td 
                    style="width:0%;">@Html.DisplayFor(modelItem => item.LastName)
                    </td>
                <td 
                    style="width:0%;">@Html.DisplayFor(modelItem => item.Email)
                    </td>
                <td 
                    style="width:0%;">@Html.DisplayFor(modelItem => item.Phone)
                    </td>
                <td 
                    style="width:25%;">@Html.DisplayFor(modelItem => item.Address)
                    </td>
                <td 
                    style="width:20%;">
                    @if (User.Identity.IsAuthenticated)
                    {
                        <a class="btn btn-info" asp-action="Edit" asp-route-id="@item.CustomerID">Edit</a>
                        <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.CustomerID">Delete</a>
                    }
                    <a class="btn btn-warning" asp-action="Details" asp-route-id="@item.CustomerID">Details</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<div class="pagination-container text-center mt-4">
    <a class="page-link btn btn-default @prevDisabled d-inline-flex"
       asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]">
        Previous
    </a>

    <span class="page-link mx-2 d-inline-flex">
        Page @Model.PageIndex of @Model.TotalPages
    </span>

    <a class="page-link btn btn-default @nextDisabled d-inline-flex"
       asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]">
        Next
    </a>
</div>

